# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - coinbeast-cal-test
env:
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  PGDATABASE: ${{ secrets.PGDATABASE }}
  PGHOST: ${{ secrets.PGHOST }}
  PGPASSWORD: ${{ secrets.PGPASSWORD }}
  PGPORT: ${{ secrets.PGPORT }}
  PGSSLMODE: ${{ secrets.PGSSLMODE }}
  PGUSER: ${{ secrets.PGUSER }}
  CALENDSO_ENCRYPTION_KEY: ${{ secrets.CALENDSO_ENCRYPTION_KEY }}
  CRON_API_KEY: ${{ secrets.CRON_API_KEY }}
  EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
  EMAIL_SERVER_HOST: ${{ secrets.EMAIL_SERVER_HOST }}
  EMAIL_SERVER_PASSWORD: ${{ secrets.EMAIL_SERVER_PASSWORD }}
  EMAIL_SERVER_PORT: ${{ secrets.EMAIL_SERVER_PORT }}
  EMAIL_SERVER_USER: ${{ secrets.EMAIL_SERVER_USER }}
  NEXT_PUBLIC_LICENSE_CONSENT: ${{ secrets.NEXT_PUBLIC_LICENSE_CONSENT }}
  NEXT_PUBLIC_TEAM_IMPERSONATION: ${{ secrets.NEXT_PUBLIC_TEAM_IMPERSONATION }}
  NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
  NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
  NEXT_PUBLIC_WEBAPP_URL: ${{ secrets.NEXT_PUBLIC_WEBAPP_URL }}
  NEXT_PUBLIC_WEBSITE_URL: ${{ secrets.NEXT_PUBLIC_WEBSITE_URL }}
  NEXT_PUBLIC_CONSOLE_URL: ${{ secrets.NEXT_PUBLIC_CONSOLE_URL }}
  NEXT_PUBLIC_EMBED_LIB_URL: ${{ secrets.NEXT_PUBLIC_EMBED_LIB_URL }}
  NEXTAUTH_COOKIE_DOMAIN: ${{ secrets.NEXTAUTH_COOKIE_DOMAIN }}
  CALCOM_TELEMETRY_DISABLED: ${{ secrets.CALCOM_TELEMETRY_DISABLED }}
  API_KEY_PREFIX: ${{ secrets.API_KEY_PREFIX }}

on: workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js version
        uses: actions/setup-node@v1
        with:
          node-version: '16.x'
          cache: 'yarn'
          cache-dependency-path: './apps/**/package-lock.json'
      - name: yarn install, build
        run: |
          yarn install --frozen-lockfile
          yarn build

      - name: zip build
        run: |
          zip node-app.zip ./

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: node-app
          path: node-app.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: node-app

      - run: |
          unzip node-app.zip
          rm node-app.zip

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'coinbeast-cal-test'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_A782E9D921E8401E9DA144FC43DE73D2 }}
          package: .
